#include <Arduboy2.h>

Arduboy2 a;

#define MAIN_OFFSET	5

#define FRAMERATE 60

#define PLAYER_RIGHT 0
#define PLAYER_LEFT 1


//https://community.arduboy.com/t/make-your-own-arduboy-game-part-6-graphics/7929 this is the documentation/ tutorial for the sprite definitions however I will be using drawbitmap which is fine

const uint8_t PROGMEM miningGuyV2[][8] = {
{0x40, 0xbc, 0x66, 0xa6, 0xae, 0x6a, 0xb7, 0x42},//Player-
{0x40, 0xbc, 0xe6, 0xa6, 0xae, 0xea, 0xb7, 0x42}, //Right
{0x42, 0xb7, 0x6a, 0xae, 0xa6, 0x66, 0xbc, 0x40},//Player-
{0x42, 0xb7, 0xea, 0xae, 0xa6, 0xe6, 0xbc, 0x40}//Left
}; //0,1 player left 2,3 player right

const unsigned char conveyors[16][8] PROGMEM = {
	{ 0xff, 0xe7, 0xb3, 0x99, 0x99, 0xb3, 0xe7, 0xff },
	{ 0xff, 0xb3, 0x99, 0xcd, 0xcd, 0x99, 0xb3, 0xff },
	{ 0xff, 0x99, 0xcd, 0xe7, 0xe7, 0xcd, 0x99, 0xff },
	{ 0xff, 0xcd, 0xe7, 0xb3, 0xb3, 0xe7, 0xcd, 0xff },
	{ 0xff, 0xe7, 0xcd, 0x99, 0x99, 0xcd, 0xe7, 0xff },
	{ 0xff, 0xcd, 0x99, 0xb3, 0xb3, 0x99, 0xcd, 0xff },
	{ 0xff, 0x99, 0xb3, 0xe7, 0xe7, 0xb3, 0x99, 0xff },
	{ 0xff, 0xb3, 0xe7, 0xcd, 0xcd, 0xe7, 0xb3, 0xff },
	{ 0xff, 0xe7, 0xc3, 0x99, 0xbd, 0xe7, 0xc3, 0xff },
	{ 0xff, 0xc3, 0x99, 0xbd, 0xe7, 0xc3, 0x99, 0xff },
	{ 0xff, 0x99, 0xbd, 0xe7, 0xc3, 0x99, 0xbd, 0xff },
	{ 0xff, 0xbd, 0xe7, 0xc3, 0x99, 0xbd, 0xe7, 0xff },
	{ 0xff, 0xc3, 0xe7, 0xbd, 0x99, 0xc3, 0xe7, 0xff },
	{ 0xff, 0x99, 0xc3, 0xe7, 0xbd, 0x99, 0xc3, 0xff },
	{ 0xff, 0xbd, 0x99, 0xc3, 0xe7, 0xbd, 0x99, 0xff },
	{ 0xff, 0xe7, 0xbd, 0x99, 0xc3, 0xe7, 0xbd, 0xff }
};

unsigned char posx = 32;
unsigned char posy = 36;
unsigned char animation = 0;
unsigned char state = PLAYER_LEFT;


void setup() {
  a.begin();
  a.setFrameRate(FRAMERATE);
}

void loop() {
  if(!a.nextFrame()) {
		return;
	}

  animation = (animation + 1) % 16; // max 16 animation frames per second


  a.clear();

  //a.drawBitmap(8 - MAIN_OFFSET, 11, circuitdude, 48, 56, WHITE);

  //a.drawBitmap(55, 19, dude, 44, 16, WHITE);

  //a.drawBitmap(32, 36, ending_laughing_body, 58, 16, WHITE);

  //conveyors[DIR_DOWN * 4 + animation / 3]

  // { 0xff, 0xe7, 0xcd, 0x99, 0x99, 0xcd, 0xe7, 0xff },
	// { 0xff, 0xcd, 0x99, 0xb3, 0xb3, 0x99, 0xcd, 0xff },
	// { 0xff, 0x99, 0xb3, 0xe7, 0xe7, 0xb3, 0x99, 0xff },
	// { 0xff, 0xb3, 0xe7, 0xcd, 0xcd, 0xe7, 0xb3, 0xff },

  // a.drawBitmap(posx + 8, posy, conveyors[4], 8, 8, WHITE);
  // a.drawBitmap(posx + 16, posy, conveyors[5], 8, 8, WHITE);
  // a.drawBitmap(posx + 24, posy, conveyors[6], 8, 8, WHITE);
  // a.drawBitmap(posx + 32, posy, conveyors[7], 8, 8, WHITE);


  // a.drawBitmap(posx, posy, conveyors[1 * 4 + animation / 4], 8, 8, WHITE);

  a.drawBitmap(posx, posy-10, miningGuyV2[state * 2 + animation / 8], 8, 8, WHITE);

  // a.println(animation); //Frames
  // a.println(animation/4); // Animation frames
  // a.println(state);
  // a.println(state * 2 + animation / 8);

//TODO: Need to work out how to get animations look at circuit dude line 1913 for the animation
//timer need to work out the maths behind the timer so that I can edit it for personal use
// DONE!

  a.pollButtons();

  a.print(a.cpuLoad());

  if(a.pressed(RIGHT_BUTTON)){
    state = PLAYER_RIGHT;
    posx++;
  }
  if(a.pressed(LEFT_BUTTON)){
    state = PLAYER_LEFT;
    posx--;
  }
  if(a.pressed(UP_BUTTON)){
    posy--;
  }
  if(a.pressed(DOWN_BUTTON)){
    posy++;
  }
//This movement is counter intuitive because the grid starts at 0,0 at the top left instead of in the middle
  if(a.justPressed(A_BUTTON)){
    animation = (animation + 1) % 16; // max 16 animation frames per second
  }

  a.display();
}
